server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3308/security?serverTimezone=Asia/Seoul
    username: root
    password: 1234

  mvc:
    view:
      prefix: /templates/
      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: update  # create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true


  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 662478562595-kocsn5bvi1195auivo634vecjt6oij3j.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile

          facebook:
            client-id: 358168403406997
            client-secret: 6ddfefeeec037a0d4ff4742a337cac67
            scope:
              - email
              - public_profile


        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 로그인 요청 uri
            token-uri: https://nid.naver.com/oauth2.0/token # 토큰 발급 uri
            user-info-uri: https://openapi.naver.com/v1/nid/me  # 프로필 정보 uri
            user-name-attribute: response
            # 회원정보를 json으로 받는데 response라는 키값으로 네이버가 return 해줌

            # redirect-uri는 Callback URL과 동일하게만 설정하면 됨
            # provider로 설정되어 있는 대표적인 사이트들은 자동으로 redirect-uri가 설정되어 있음
            # ex) google -> redirect-uri: http://localhost:8080/login/oauth2/code/google
            # ex) facebook -> redirect-uri: http://localhost:8080/login/oauth/code/facebook
